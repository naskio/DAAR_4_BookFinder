{"version":3,"sources":["redux/actionTypes.js","redux/initialState.js","redux/rootReducer.js","redux/reducers/global.js","redux/reducers/search.js","config/index.js","redux/configureStore.js","components/routeWrapper/index.js","components/routeWrapper/routeWrapper.view.js","components/refreshWrapper/refreshWrapper.view.js","components/refreshWrapper/index.js","utils/formatters.js","utils/catcher.js","assets/images/logo_text.svg","components/bookPreview/bookPreview.view.mui_style.js","components/bookPreview/bookPreview.view.js","components/bookPreview/index.js","views/book/book.view.js","redux/logics/books.js","redux/actions/global.js","redux/logics/global.js","views/book/index.js","views/book/book.redux.js","assets/images/logo_text.png","views/about/index.js","views/about/about.view.js","views/advanced_search/advanced_search.view.js","redux/logics/search.js","redux/actions/search.js","views/advanced_search/index.js","views/advanced_search/advanced_search.redux.js","views/search/search.view.js","redux/logics/autocomplete.js","views/search/index.js","views/search/search.redux.js","views/results/results.view.js","views/results/index.js","views/results/results.redux.js","theme/index.js","components/layout/layout.mui_style.js","components/layout/layout.view.js","components/layout/index.js","routing/routing.view.js","routing/index.js","routing/routing.redux.js","theme/material_ui/index.js","root/index.js","root/root.view.js","utils/axios.js","app.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["SET_GLOBAL","RESET_GLOBAL","FETCH_SEARCH","RESET_SEARCH","RESET_ALL","global","title","search","keyword","advanced","duration","res","combineReducers","state","initialState","action","type","payload","IS_DEV","process","URL","API","model","undefined","id","TITLE","section","persistConfig","key","keyPrefix","appName","storage","middlewares","thunk","promise","persistedReducer","persistReducer","rootReducer","View","Component","component","Layout","layout","rest","render","props","this","refreshing","children","Box","display","top","right","left","position","alignItems","justifyContent","height","width","style","margin","CircularProgress","color","React","PureComponent","defaultProps","stringTrimmed","st","l","length","String","substring","formikApiErrorsCatcher","err","globalMessage","alternative","setFieldError","enqueueSnackbar","logout","response","data","Object","entries","filter","k","some","it","reduce","acc","v","Array","join","forEach","errorMessage","_","isEmpty","JSON","stringify","statusText","status","message","code","variant","makeStyles","theme","root","spacing","media","objectFit","objectPosition","getLanguage","lang","d","book","classes","useStyles","Card","className","CardActionArea","Link","to","gutenberg_id","CardMedia","alt","image","cover_url","CardContent","Typography","gutterBottom","language","authors","map","a","full_name","withRouter","setTitle","history","useSnackbar","bookId","useParams","useState","setRefreshing","setBook","useEffect","is_mounted","axios","get","then","fetchBooks","catch","push","finally","mt","Grid","container","justify","direction","item","src","LOGO","xs","bookshelves","label","Button","size","target","href","download_url","similar_to","wrap","setGlobalAction","setGlobal","Reduxed","connect","dispatch","sm","md","lg","xl","p","mb","align","paragraph","my","ml","initialValues","validationSchema","Yup","required","fetchSearch","resetSearch","formik","useFormik","onSubmit","values","setSubmitting","noValidate","TextField","fullWidth","autoFocus","name","placeholder","helperText","error","touched","Boolean","errors","onChange","handleChange","onBlur","handleBlur","value","InputProps","endAdornment","InputAdornment","Tooltip","IconButton","onClick","handleSubmit","disabled","isValid","isSubmitting","startAdornment","fontSize","params","getLabel","description","autoCorrect","setAutoCorrect","suggestions","setSuggestions","loading","setLoading","Autocomplete","freeSolo","disableClearable","options","getOptionLabel","newValue","setFieldValue","onInputChange","inputValue","setFieldTouched","q","s","renderInput","price","Paper","goBack","toLocaleString","drawerWidth","styles","content","flexGrow","padding","transition","transitions","create","easing","sharp","leavingScreen","marginLeft","contentShift","enteringScreen","appBarSpacer","mixins","toolbar","marginBottom","appBar","zIndex","drawer","paddingRight","flexShrink","drawerPaper","list","maxWidth","backgroundColor","palette","background","paper","nestedItem","paddingLeft","pageContainer","minHeight","contentWrap","paddingBottom","footer","bottom","link","avatar","TH","avatarLarge","hide","Date","getFullYear","CssBaseline","Container","getYear","withStyles","withSnackbar","empty","basename","exact","path","Book","About","AdvancedSearch","Search","Results","createMuiTheme","primary","main","secondary","blueGrey","primaryText","_closeSnackbar","notistackRef","current","closeSnackbar","createRef","interceptors","request","use","config","metadata","startTime","Promise","reject","endTime","isCancel","console","log","timeout","defaults","ThemeProvider","muiTheme","ref","maxSnack","preventDuplicate","anchorOrigin","vertical","horizontal","autoHideDuration","aria-label","Close","store","createStore","applyMiddleware","persistor","persistStore","configureStore","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01ea2c5a.chunk.js","sourcesContent":["// UI\nexport const SET_GLOBAL = 'SET_GLOBAL'; // merge with global\nexport const RESET_GLOBAL = 'RESET_GLOBAL'; // reset all global\n\n// Search API\nexport const FETCH_SEARCH = 'FETCH_SEARCH';\nexport const RESET_SEARCH = 'RESET_SEARCH';\n\n// Books API\n// export const FETCH_BOOK = 'FETCH_BOOK';\n// export const RESET_BOOK = 'RESET_BOOK';\n\n// Autocomplete API\n// export const FETCH_AUTOCOMPLETE = 'FETCH_AUTOCOMPLETE';\n// export const RESET_AUTOCOMPLETE = 'RESET_AUTOCOMPLETE';\n\n// others\nexport const RESET_ALL = 'RESET_ALL'; // reset all store\n\n/*\nAPI:\nGET /search/\n    params:\n        keyword:string\n        advanced:boolean\nGET /autocomplete/\n    params:\n        q:string\nGET /books/{id}/\n*/\n","export default {\n    // UI shared configuration\n    global: {\n        title: 'Book Finder - Search',\n    },\n    // search results\n    search: {\n        // query\n        keyword: '',\n        advanced: '',\n        duration: '', // in ms (executed in x.x seconds)\n        res: [], // array or string or empty array\n    },\n}\n","import {combineReducers} from 'redux';\n\nimport global from './reducers/global';\nimport search from './reducers/search';\n\n\nexport default combineReducers({\n    global,\n    search,\n});\n","import {SET_GLOBAL, RESET_GLOBAL, RESET_ALL} from '../actionTypes';\n\nimport initialState from '../initialState';\n\nexport default (state = initialState.global, action) => {\n    switch (action.type) {\n        case SET_GLOBAL: {\n            return {...state, ...action.payload};\n        }\n        case RESET_ALL:\n        case RESET_GLOBAL: {\n            return initialState.global;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {FETCH_SEARCH, RESET_SEARCH, RESET_ALL} from '../actionTypes';\n\nimport initialState from '../initialState';\n\nexport default (state = initialState.search, action) => {\n    switch (action.type) {\n        case FETCH_SEARCH: {\n            return {...action.payload};\n        }\n        case RESET_SEARCH:\n        case RESET_ALL: {\n            return initialState.search;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","export const IS_DEV = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\n// export const URL = 'http://localhost:4000'; // mock endpoint\n// export const URL = 'http://localhost:8000';\nexport const URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000';\n\n\nexport const API = (model = undefined, id = undefined) => {\n    if (model && id) {\n        return `${URL}/api/${model}/${id}/`;\n    }\n    if (model) {\n        return `${URL}/api/${model}/`;\n    }\n    return `${URL}/api/`;\n};\n\nexport const TIMEOUT = 120 * 1000; // in ms (2 minutes)\n\nexport const TITLE = (section) => `Book Finder - ${section}`;\n\nexport const BASE_NAME = IS_DEV ? '' : '/DAAR_4_BookFinder';\n","import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\nimport storage from 'redux-persist/lib/storage';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport {name as appName} from \"../../package.json\";\nimport {IS_DEV} from \"../config\";\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nconst persistConfig = {\n    key: 'root',\n    keyPrefix: appName,\n    storage: storage,\n    // whitelist: [],\n    // blacklist: ['logs', 'sparql'],\n    // stateReconciler: autoMergeLevel2,\n};\n\nconst middlewares = [thunk, promise];\n\nif (IS_DEV) {\n    middlewares.push(logger);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n    let store = createStore(persistedReducer, applyMiddleware(...middlewares));\n    let persistor = persistStore(store);\n    // persistor.purge();\n    return {store, persistor};\n};\n","import View from './routeWrapper.view';\n\nexport default View;\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\n\nconst routeWrapper = ({\n                          component: Component, layout: Layout, ...rest\n                      }) => {\n    return (\n        <Route {...rest} render={(props) =>\n            <Layout {...props}>\n                <Component {...props} />\n            </Layout>\n        }/>\n    );\n}\nexport default routeWrapper;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Box, CircularProgress} from \"@material-ui/core\";\n\nclass View extends React.PureComponent {\n    render() {\n        const {refreshing, children} = this.props;\n\n        return (\n            <>\n                {\n                    refreshing ?\n                        (\n                            <Box\n                                display='flex'\n                                top={0}\n                                right={0}\n                                left={0}\n                                position='absolute'\n                                alignItems='center'\n                                justifyContent='center'\n                                height='100vh'\n                                width='100vw'\n                                style={{\n                                    margin: 0,\n                                }}\n                            >\n                                <CircularProgress color='primary'/>\n                            </Box>\n                        ) :\n                        (<>{children}</>)\n                }\n            </>\n        );\n    }\n}\n\nView.propTypes = {\n    refreshing: PropTypes.bool,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n}\nView.defaultProps = {\n    refreshing: false,\n};\n\nexport default View;\n","import View from './refreshWrapper.view';\n\nexport default View;\n","export const priceFormatter = (price) => {\n    if (!price) {\n        return '';\n    }\n    return price.toLocaleString();\n};\n\nexport const cleanColumnName = (name) => {\n    if (!name) {\n        return '';\n    }\n    const withoutAccent = name.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\n    const withoutSpaces = withoutAccent.replace(' ', '_');\n    // column name regex\n    return withoutSpaces.replace(/[^a-z0-9_]/g, '').toLowerCase();\n}\n\nexport const stringTrimmed = (st, l = 256) => {\n    if (!st) {\n        return st;\n    }\n    return st.length > l ? String(st).substring(0, l - 3) + \"...\" : st;\n}\n","import _ from 'lodash';\nimport {IS_DEV} from \"../config\";\nimport {stringTrimmed} from \"./formatters\";\n\nexport const formikApiErrorsCatcher = (err, setFieldError = null, enqueueSnackbar = null, logout = null) => {\n    let globalMessage, alternative;\n    if (IS_DEV) {\n        console.log('err', err);\n    }\n    if (err.response) {\n        if (IS_DEV) {\n            console.log('err.response', err.response);\n        }\n        if (err.response.data) {\n            if (err.response.data instanceof Object) {\n                globalMessage = Object.entries(err.response.data).filter(([k,]) => ['detail', 'non_field_errors'].some(it => it === k))\n                    .reduce((acc, [, v]) => {\n                        if (v instanceof Array) {\n                            return acc + (acc ? ', ' : '') + v.join(', ');\n                        } else {\n                            return acc + (acc ? ', ' : '') + v;\n                        }\n                    }, \"\");\n                if (setFieldError) {\n                    Object.entries(err.response.data).filter(([k,]) => !['detail', 'non_field_errors'].some(it => it === k)).forEach(\n                        ([k, v]) => {\n                            let errorMessage = v;\n                            if (errorMessage instanceof Array) {\n                                errorMessage = errorMessage.join(', ');\n                            }\n                            setFieldError(k, errorMessage);\n                        }\n                    )\n                }\n                if (!_.isEmpty(err.response.data)) {\n                    alternative = JSON.stringify(err.response.data);\n                }\n                if (!alternative) {\n                    alternative = \"Error 400: Bad Request\";\n                }\n            } else {\n                globalMessage = err.response.data;\n            }\n        } else {\n            globalMessage = err.response.statusText;\n            if (!globalMessage) {\n                globalMessage = `Error Code ${err.response.status}`;\n            }\n        }\n    } else {\n        if (err.message || err.type || err.code) {\n            globalMessage = err.message || `Error ${err.type || err.code}`;\n        } else {\n            globalMessage = 'Unknown Error';\n        }\n    }\n    if (enqueueSnackbar) {\n        enqueueSnackbar(stringTrimmed(globalMessage || alternative), {\n            variant: 'error',\n        });\n    }\n    if (logout) {\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n            // if (err.response && err.response.status && Math.round(err.response.status / 100) === 4) {\n            logout();\n        }\n    }\n    if (IS_DEV) {\n        console.log('globalMessage', globalMessage);\n    }\n    return stringTrimmed(globalMessage || alternative);\n}\n","export default __webpack_public_path__ + \"static/media/logo_text.2fb3e3bc.svg\";","import {makeStyles} from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        // maxWidth: theme.spacing(48),\n        width: theme.spacing(48),\n    },\n    media: {\n        objectFit: 'cover',\n        objectPosition: 'top',\n        height: theme.spacing(32),\n    },\n}));\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport _ from 'lodash';\nimport {\n    Card,\n    CardActionArea,\n    // CardActions,\n    // Button,\n    CardContent,\n    CardMedia,\n    Typography\n} from \"@material-ui/core\";\nimport useStyles from './bookPreview.view.mui_style';\n\nexport const getLanguage = (lang) => {\n    const d = {\n        'en': \"English\",\n        'fr': \"French\",\n    }\n    if (lang in d) {\n        return d[lang];\n    } else {\n        return lang;\n    }\n}\n\nconst View = ({book}) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea component={Link} to={`/book/${book.gutenberg_id}/`}>\n                <CardMedia\n                    component=\"img\"\n                    alt={book.title}\n                    title={book.title}\n                    image={book.cover_url}\n                    className={classes.media}\n                />\n                <CardContent>\n                    <Typography variant=\"h5\">\n                        {book.title}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"secondary\" gutterBottom>\n                        {getLanguage(book.language)}\n                    </Typography>\n                    {!_.isEmpty(book.authors) && <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        By {book.authors.map(a => a.full_name).join(', ')}\n                    </Typography>}\n                </CardContent>\n            </CardActionArea>\n            {/*<CardActions>*/}\n            {/*    <Button size=\"small\" color=\"primary\" component={Link} to={`/book/${book.gutenberg_id}/`}>*/}\n            {/*        More*/}\n            {/*    </Button>*/}\n            {/*</CardActions>*/}\n        </Card>);\n}\n\nexport default View;\n","import View from './bookPreview.view';\n\nexport default View;\n","import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from 'react-router-dom';\nimport RefreshWrapper from '../../components/refreshWrapper';\nimport _ from 'lodash';\nimport {formikApiErrorsCatcher} from \"../../utils/catcher\";\nimport {withRouter} from 'react-router-dom';\nimport {\n    Box,\n    Grid,\n    Button,\n    Typography,\n} from \"@material-ui/core\";\nimport {\n    fetchBooks,\n} from \"../../redux/logics/books\";\nimport LOGO from \"../../assets/images/logo_text.svg\";\nimport {useSnackbar} from \"notistack\";\nimport {TITLE} from \"../../config\";\nimport BookPreview from '../../components/bookPreview';\nimport {getLanguage} from \"../../components/bookPreview/bookPreview.view\";\n\n\nconst View = ({setTitle, history}) => {\n    const {enqueueSnackbar} = useSnackbar();\n    const {id: bookId} = useParams();\n    // state\n    const [refreshing, setRefreshing] = useState(false);\n    const [book, setBook] = useState({});\n    // on mount/unmount\n    useEffect(() => {\n        let is_mounted = true;\n        setTitle(TITLE(`Book`));\n        setRefreshing(true);\n        fetchBooks(bookId)\n            .then((data) => {\n                if (is_mounted) {\n                    setBook(data);\n                    setTitle(TITLE(`Book - ${data.title}`));\n                }\n            })\n            .catch(err => {\n                formikApiErrorsCatcher(err, null, enqueueSnackbar);\n                history.push('/');\n            }).finally(() => {\n            if (is_mounted) {\n                setRefreshing(false);\n            }\n        })\n\n        return () => {\n            is_mounted = false;\n        }\n    }, [bookId, history, setTitle, enqueueSnackbar]);\n    return (\n        <RefreshWrapper refreshing={refreshing}>\n            <Box mt={4}>\n                <Grid\n                    container\n                    justify='center'\n                    direction='column'\n                    alignItems='center'\n                    spacing={6}\n                >\n                    <Grid item>\n                        <Link to='/'>\n                            <Box display='inline'>\n                                <img style={{\n                                    height: 180,\n                                    objectFit: 'contain',\n                                }} src={LOGO} alt=\"Book Finder\"/>\n                            </Box>\n                        </Link>\n                    </Grid>\n\n                    <Grid item container direction='row' spacing={6}>\n                        <Grid item xs={4} style={{width: '100%'}}>\n                            <img src={book.cover_url}\n                                 alt={book.title}\n                                 style={{\n                                     width: '100%',\n                                     objectFit: 'contain',\n                                 }}/>\n                        </Grid>\n                        <Grid item xs={8} container direction='column' spacing={3}>\n\n                            <Grid item>\n                                <Typography gutterBottom display='inline' variant={'h2'}>{book.title}</Typography>\n                            </Grid>\n\n\n                            <Grid item>\n                                <Typography\n                                    gutterBottom\n                                    display='inline'\n                                    variant={'subtitle1'}>\n                                    <strong>Language: </strong>\n                                    {getLanguage(book.language)}\n                                </Typography>\n                            </Grid>\n\n                            {!_.isEmpty(book.authors) && (\n                                <Grid item>\n                                    <Typography\n                                        gutterBottom\n                                        display='inline'\n                                        variant={'subtitle1'}>\n                                        <strong>Authors: </strong>\n                                        {book.authors.map(a => a.full_name).join(', ')}\n                                    </Typography>\n                                </Grid>\n                            )}\n\n                            {!_.isEmpty(book.bookshelves) && (\n                                <Grid item>\n                                    <Typography\n                                        gutterBottom\n                                        display='inline'\n                                        variant={'subtitle1'}>\n                                        <strong>Bookshelves: </strong>\n                                        {book.bookshelves.map(a => a.label).join(', ')}\n                                    </Typography>\n                                </Grid>\n                            )}\n\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\"\n                                    size='large'\n                                    color='primary'\n                                    target=\"_blank\"\n                                    href={book.download_url}\n                                >\n                                    Download\n                                </Button>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n\n                    {\n                        !_.isEmpty(book.similar_to) && (\n                            <Grid item>\n                                <Typography variant={'h4'}>Similar books</Typography>\n                            </Grid>\n                        )\n                    }\n\n                    <Grid item container direction='row' wrap={'wrap'} spacing={4}>\n                        {book.similar_to && book.similar_to.map(book => (\n                            <Grid item key={book.gutenberg_id}>\n                                <BookPreview book={book}/>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Box>\n        </RefreshWrapper>\n    );\n}\n\nexport default withRouter(View);\n","import axios from \"axios\";\nimport {API} from \"../../config\";\n\nexport const fetchBooks = (id = undefined) => {\n    return axios.get(API('books', id)).then(res => {\n        return res.data;\n    });\n};\n","import {SET_GLOBAL, RESET_GLOBAL, RESET_ALL} from \"../actionTypes\";\n\n\nexport const setGlobalAction = (payload) => ({\n    type: SET_GLOBAL,\n    payload,\n});\n\nexport const resetGlobalAction = () => ({\n    type: RESET_GLOBAL,\n});\n\nexport const resetAllAction = () => ({\n    type: RESET_ALL,\n});\n","import {\n    setGlobalAction,\n    resetGlobalAction,\n    resetAllAction,\n} from \"../actions/global\";\n\nexport const setTitle = (title) => setGlobalAction({title});\nexport const setGlobal = setGlobalAction;\nexport const resetGlobal = resetGlobalAction;\nexport const resetAll = resetAllAction;\n","import Reduxed from './book.redux';\n\nexport default Reduxed;\n","import {connect} from \"react-redux\";\nimport View from \"./book.view\";\nimport {\n    setTitle,\n} from \"../../redux/logics/global\";\n\nconst mapStateToProps = state => ({\n    global: state.global,\n    search: state.search,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTitle: (title) => dispatch(setTitle(title)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(View);\n","export default __webpack_public_path__ + \"static/media/logo_text.63403a75.png\";","import View from './about.view';\n\nexport default View;\n","import React from \"react\";\nimport {Grid, Box, Typography, Link as UILink} from \"@material-ui/core\";\nimport LOGO from \"../../assets/images/logo_text.png\";\nimport {Link} from \"react-router-dom\";\n\nexport default class extends React.PureComponent {\n    render() {\n        return <Box mt={8}>\n            <Grid\n                container\n                justify='center'\n                alignItems='center'\n                direction='column'\n            >\n                <Grid item xs={12} sm={11} md={10} lg={9} xl={8}>\n                    <Box p={8}>\n                        <Box p={2} mb={4}>\n                            <Grid container justify='center'>\n                                <Link to='/'>\n                                    <img style={{\n                                        height: 256,\n                                        objectFit: 'contain',\n                                    }} src={LOGO} alt=\"Book Finder\"/>\n                                </Link>\n                            </Grid>\n                        </Box>\n                        <Typography variant='subtitle2' align='center' paragraph>Book Finder 2021</Typography>\n                        <Typography variant='body1' align='left'>\n                            is a project created at Sorbonne Université (DAAR course).\n                        </Typography>\n                        <Box my={2}>\n                            <Typography variant='h6' align='left'>Authors</Typography>\n                            <Box ml={2}>\n                                <UILink\n                                    variant=\"subtitle1\"\n                                    color=\"textPrimary\"\n                                    target=\"_blank\"\n                                    href='https://www.linkedin.com/in/nask/'\n                                    component='a'\n                                >\n                                    Mehdi Nassim KHODJA\n                                </UILink>\n                                <br/>\n                                <UILink\n                                    variant=\"subtitle1\"\n                                    color=\"textPrimary\"\n                                    target=\"_blank\"\n                                    href='#'\n                                    component='a'\n                                >\n                                    Qiwei XIAN\n                                </UILink>\n                                <br/>\n                                <UILink\n                                    variant=\"subtitle1\"\n                                    color=\"textPrimary\"\n                                    target=\"_blank\"\n                                    href='#'\n                                    component='a'\n                                >\n                                    Adel EL AMRAOUI\n                                </UILink>\n                            </Box>\n                            <br/>\n                            <Typography variant='h6' align='left'>Supervisors</Typography>\n                            <Box ml={2}>\n                                <UILink\n                                    variant=\"subtitle1\"\n                                    color=\"textPrimary\"\n                                    target=\"_blank\"\n                                    href='#'\n                                    component='a'\n                                >\n                                    Dr. Binh-Minh BUI-XUAN\n                                </UILink>\n                                <br/>\n                                <UILink\n                                    variant=\"subtitle1\"\n                                    color=\"textPrimary\"\n                                    target=\"_blank\"\n                                    href='#'\n                                    component='a'\n                                >\n                                    Arthur ESCRIOU\n                                </UILink>\n                            </Box>\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Box>\n    }\n}\n","import React, {useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {useFormik} from \"formik\";\nimport _ from 'lodash';\nimport {formikApiErrorsCatcher} from \"../../utils/catcher\";\nimport {withRouter} from 'react-router-dom';\nimport {CircularProgress, Box, Grid, IconButton, InputAdornment, TextField, Tooltip, Button} from \"@material-ui/core\";\nimport {SearchOutlined as SearchIcon, ArrowForwardIosOutlined as GoIcon} from \"@material-ui/icons\";\nimport LOGO from \"../../assets/images/logo_text.svg\";\nimport * as Yup from \"yup\";\nimport {useSnackbar} from \"notistack\";\nimport {TITLE} from \"../../config\";\n\nconst initialValues = {\n    keyword: '',\n    advanced: true,\n};\n\n\nconst validationSchema = Yup.object({\n    keyword: Yup.string(\"Enter a regular expression\").required(\"Regex is required\"),\n    advanced: Yup.boolean(\"Enter is advanced\").required(\"Advanced is required\"),\n});\n\nconst View = ({setTitle, fetchSearch, resetSearch, history}) => {\n    const {enqueueSnackbar} = useSnackbar();\n    useEffect(() => {\n        setTitle(TITLE('Advanced Search'));\n        resetSearch();\n    }, [setTitle, resetSearch]);\n    // formik\n    const myOnSubmit = () => {\n        fetchSearch({...formik.values}).then(res => {\n            formik.setSubmitting(false);\n            if (!res || _.isEmpty(res) || (typeof res == \"string\")) {\n                enqueueSnackbar(`Your regex search - ${formik.values.keyword} - did not match any books.`, {variant: 'info'});\n            } else {\n                history.push('/results');\n            }\n        }).catch((err) => {\n            const errorMessage = formikApiErrorsCatcher(err, null, enqueueSnackbar);\n            formik.setFieldError('keyword', errorMessage);\n            formik.setSubmitting(false);\n        });\n    }\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: myOnSubmit,\n    });\n\n    return (\n        <form noValidate>\n            <Box mt={4}>\n                <Grid\n                    container\n                    justify='center'\n                    direction='column'\n                    alignItems='center'\n                >\n                    <Grid item style={{width: '100%'}} xs={9} sm={8} md={7} lg={6} xl={5}>\n                        <img src={LOGO} alt='Book Finder' style={{\n                            objectFit: 'contain',\n                        }}/>\n                    </Grid>\n\n                    <Grid item style={{width: '100%'}}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            autoFocus\n                            name=\"keyword\"\n                            // type=\"search\"\n                            placeholder=\"Search by RegEx ...\"\n                            // helperText={formik.touched.keyword ? formik.errors.keyword : \"\"}\n                            helperText={\"\"}\n                            error={formik.touched.keyword && Boolean(formik.errors.keyword)}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.keyword}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <Tooltip title='Search'>\n                                            <span>\n                                                <IconButton\n                                                    color=\"primary\"\n                                                    onClick={formik.handleSubmit}\n                                                    type=\"submit\"\n                                                    variant=\"contained\"\n                                                    disabled={!formik.isValid || formik.isSubmitting}\n                                                >\n                                                    {\n                                                        formik.isSubmitting ? (\n                                                            <CircularProgress size={24}/>\n                                                        ) : (\n\n                                                            <GoIcon/>\n                                                        )\n                                                    }\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    </InputAdornment>\n                                ),\n                                startAdornment: (\n                                    <InputAdornment position='start'>\n                                        <SearchIcon color={\"secondary\"} fontSize=\"large\"/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n\n                    <Grid item>\n                        <Box mt={10}>\n                            <Button\n                                component={Link}\n                                to={'/search'}\n                                color='primary'\n                                variant=\"contained\"\n                                size='large'\n                            >\n                                Search by Keyword\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Box>\n        </form>\n    );\n}\n\nexport default withRouter(View);\n","import axios from \"axios\";\nimport {API} from \"../../config\";\nimport {fetchSearchAction, resetSearchAction} from \"../actions/search\";\n\nexport const fetchSearch = (data) => dispatch => {\n    return axios.get(API('search'),{\n        params: data,\n    }).then(res => {\n        dispatch(fetchSearchAction({\n            keyword: data.keyword,\n            advanced: data.advanced,\n            duration: res.duration || null,\n            res: res.data, // array or string or empty array\n        }));\n        return res.data;\n    });\n};\n\nexport const resetSearch = resetSearchAction;\n","import {FETCH_SEARCH, RESET_SEARCH} from \"../actionTypes\";\n\nexport const fetchSearchAction = (payload) => ({\n    type: FETCH_SEARCH,\n    payload,\n});\n\nexport const resetSearchAction = () => ({\n    type: RESET_SEARCH,\n});\n","import Reduxed from './advanced_search.redux';\n\nexport default Reduxed;\n","import {connect} from \"react-redux\";\nimport View from \"./advanced_search.view\";\nimport {\n    fetchSearch,\n    resetSearch,\n} from \"../../redux/logics/search\";\nimport {\n    setTitle,\n    setGlobal,\n} from \"../../redux/logics/global\";\n\nconst mapStateToProps = state => ({\n    global: state.global,\n    search: state.search,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setGlobal: (data) => dispatch(setGlobal(data)),\n    setTitle: (title) => dispatch(setTitle(title)),\n    fetchSearch: (data) => dispatch(fetchSearch(data)),\n    resetSearch: () => dispatch(resetSearch()),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(View);\n","import React, {useEffect, useState} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {useFormik} from \"formik\";\nimport _ from 'lodash';\nimport {formikApiErrorsCatcher} from \"../../utils/catcher\";\nimport {withRouter} from 'react-router-dom';\nimport {CircularProgress, Box, Grid, IconButton, InputAdornment, TextField, Tooltip, Button} from \"@material-ui/core\";\nimport {SearchOutlined as SearchIcon, ArrowForwardIosOutlined as GoIcon} from \"@material-ui/icons\";\nimport LOGO from \"../../assets/images/logo_text.svg\";\nimport * as Yup from \"yup\";\nimport {useSnackbar} from \"notistack\";\nimport {TITLE} from \"../../config\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {fetchAutocomplete} from \"../../redux/logics/autocomplete\";\n\nconst initialValues = {\n    keyword: '',\n    advanced: false,\n};\n\n\nconst validationSchema = Yup.object({\n    keyword: Yup.string(\"Enter a keyword\").required(\"Keyword is required\"),\n    advanced: Yup.boolean(\"Enter is advanced\").required(\"Advanced is required\"),\n});\n\n\nconst getLabel = (value) => {\n    if (typeof value === 'string') {\n        return value || \"\";\n    } else {\n        if (value && value.description) {\n            return value.description || '';\n        } else {\n            return \"\";\n        }\n    }\n}\n\nconst getValue = (value) => {\n    if (typeof value === 'string') {\n        return value || \"\";\n    } else {\n        if (value && value.value) {\n            return value.value;\n        } else {\n            return \"\";\n        }\n    }\n}\n\nconst View = ({setTitle, fetchSearch, resetSearch, history}) => {\n    const {enqueueSnackbar} = useSnackbar();\n    // state\n    const [autoCorrect, setAutoCorrect] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const [loading, setLoading] = useState(false);\n    // on mount\n    useEffect(() => {\n        setTitle(TITLE('Search by Keyword'));\n        resetSearch();\n    }, [setTitle, resetSearch]);\n    // formik\n    const myOnSubmit = () => {\n        setAutoCorrect(\"\");\n        fetchSearch({...formik.values}).then(res => {\n            formik.setSubmitting(false);\n            if (!res || _.isEmpty(res)) {\n                enqueueSnackbar(`Your search - ${formik.values.keyword} - did not match any books.`, {variant: 'info'});\n            } else if (typeof res == \"string\") {\n                enqueueSnackbar(`Your search - ${formik.values.keyword} - did not match any books. Search instead for: ${res}`, {variant: 'info'});\n                setAutoCorrect(`Search instead for: ${res}`);\n            } else {\n                history.push('/results');\n            }\n        }).catch((err) => {\n            const errorMessage = formikApiErrorsCatcher(err, null, enqueueSnackbar);\n            formik.setFieldError('keyword', errorMessage);\n            formik.setSubmitting(false);\n        });\n    }\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: myOnSubmit,\n    });\n\n    return (\n        <form noValidate>\n            <Box mt={4}>\n                <Grid\n                    container\n                    justify='center'\n                    direction='column'\n                    alignItems='center'\n                >\n                    <Grid item style={{width: '100%'}} xs={9} sm={8} md={7} lg={6} xl={5}>\n                        <img src={LOGO} alt='Book Finder' style={{\n                            objectFit: 'contain',\n                        }}/>\n                    </Grid>\n                    <Grid item style={{width: '100%'}}>\n\n                        <Autocomplete\n                            freeSolo\n                            disableClearable\n                            fullWidth\n                            name=\"keyword\"\n                            options={suggestions}\n                            getOptionLabel={getLabel}\n                            // disabled={}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.keyword}\n                            loading={loading}\n                            onChange={(_, newValue) => {\n                                formik.setFieldValue('keyword', getValue(newValue), true);\n                            }}\n                            onInputChange={(_, inputValue) => {\n                                formik.setFieldTouched('keyword', true, false);\n                                if (!inputValue) {\n                                    formik.setFieldValue('keyword', \"\", true);\n                                    setSuggestions([]);\n                                } else {\n                                    setLoading(true);\n                                    fetchAutocomplete({q: inputValue})\n                                        .then(s => {\n                                            setSuggestions(s);\n                                        }).catch(err => {\n                                        const message = formikApiErrorsCatcher(err);\n                                        formik.setFieldError('keyword', message);\n                                        enqueueSnackbar(message, {\n                                            variant: \"error\",\n                                        });\n                                    }).finally(() => {\n                                        setLoading(false);\n                                    });\n                                }\n                            }}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    // label='Search by keyword ...'\n                                    placeholder='Search by keyword ...'\n                                    // size='medium'\n                                    fullWidth\n                                    autoFocus\n                                    variant=\"outlined\"\n                                    error={formik.touched.keyword && Boolean(formik.errors.keyword)}\n                                    helperText={autoCorrect || \"\"}\n                                    InputProps={{\n                                        ...params.InputProps,\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title='Search'>\n                                            <span>\n                                                <IconButton\n                                                    color=\"primary\"\n                                                    onClick={formik.handleSubmit}\n                                                    type=\"submit\"\n                                                    variant=\"contained\"\n                                                    disabled={!formik.isValid || loading || formik.isSubmitting}\n                                                >\n                                                    {\n                                                        formik.isSubmitting ? (\n                                                            <CircularProgress size={24}/>\n                                                        ) : (\n\n                                                            <GoIcon/>\n                                                        )\n                                                    }\n                                                </IconButton>\n                                            </span>\n                                                </Tooltip>\n                                            </InputAdornment>\n                                        ),\n                                        startAdornment: (\n                                            <InputAdornment position='start'>\n                                                <SearchIcon color={\"secondary\"} fontSize=\"large\"/>\n                                            </InputAdornment>\n                                        ),\n                                        // type: 'search', // add clear\n                                    }}\n                                />)\n                            }\n                        />\n\n                    </Grid>\n                    <Grid item>\n                        <Box mt={10}>\n                            <Button\n                                component={Link}\n                                to={'/advanced-search'}\n                                color='primary'\n                                variant=\"contained\"\n                                size='large'\n                            >\n                                Advanced Search\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Box>\n        </form>\n    );\n}\n\nexport default withRouter(View);\n","import axios from \"axios\";\nimport {API} from \"../../config\";\n\nexport const fetchAutocomplete = (data) => {\n    return axios.get(API('autocomplete'), {\n        params: data, // {q}\n    }).then(res => {\n        return res.data;\n    });\n};\n","import Reduxed from './search.redux';\n\nexport default Reduxed;\n","import {connect} from \"react-redux\";\nimport View from \"./search.view\";\nimport {\n    fetchSearch,\n    resetSearch,\n} from \"../../redux/logics/search\";\nimport {\n    setTitle,\n    setGlobal,\n} from \"../../redux/logics/global\";\n\nconst mapStateToProps = state => ({\n    global: state.global,\n    search: state.search,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setGlobal: (data) => dispatch(setGlobal(data)),\n    setTitle: (title) => dispatch(setTitle(title)),\n    fetchSearch: (data) => dispatch(fetchSearch(data)),\n    resetSearch: () => dispatch(resetSearch()),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(View);\n","import React, {useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport {\n    Paper,\n    Box,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport {ChevronLeft as BackIcon} from \"@material-ui/icons\";\nimport LOGO from \"../../assets/images/logo_text.svg\";\nimport {TITLE} from \"../../config\";\nimport BookPreview from '../../components/bookPreview';\nimport {priceFormatter} from \"../../utils/formatters\";\n\n\nconst View = ({setTitle, history, search}) => {\n    useEffect(() => {\n        setTitle(TITLE(`Search results for ${search.advanced ? \"regex\" : \"keyword\"} \"${search.keyword}\"`));\n    }, [setTitle, search]);\n\n    return (\n        <Box mt={4}>\n            <Grid\n                container\n                justify='center'\n                direction='column'\n                alignItems='center'\n                spacing={6}\n            >\n                <Grid item>\n                    <Link to='/'>\n                        <Box display='inline'>\n                            <img style={{\n                                height: 180,\n                                objectFit: 'contain',\n                            }} src={LOGO} alt=\"Book Finder\"/>\n                        </Box>\n                    </Link>\n                </Grid>\n\n                <Grid item style={{width: '100%'}}>\n                    <Paper>\n                        <Grid container\n                              direction='row'\n                              spacing={4}\n                              justify='space-evenly'\n                              alignItems='center'\n                              wrap='nowrap'>\n                            <Grid item>\n                                <Tooltip title=\"Go Back\">\n                                    <IconButton\n                                        // size='medium'\n                                        onClick={() => {\n                                            history.goBack();\n                                        }}\n                                        color='primary'\n                                    >\n                                        <BackIcon\n                                            fontSize='large'\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n\n                            <Grid item xs={11}>\n                                <Typography variant='h5'>\n                                    {`Search results for ${search.advanced ? \"regex\" : \"keyword\"} \"${search.keyword}\"`}\n                                </Typography>\n                                <Typography variant='caption'>\n                                    {`in ${priceFormatter(search.duration / 1000) || 'n/a'} seconds`}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n                <Grid item container direction='row' justify='center' wrap={'wrap'} spacing={4}>\n                    {search.res && search.res.map(book => (\n                        <Grid item key={book.gutenberg_id}>\n                            <BookPreview book={book}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default withRouter(View);\n","import Reduxed from './results.redux';\n\nexport default Reduxed;\n","import {connect} from \"react-redux\";\nimport View from \"./results.view\";\nimport {\n    setTitle,\n} from \"../../redux/logics/global\";\n\nconst mapStateToProps = state => ({\n    global: state.global,\n    search: state.search,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTitle: (title) => dispatch(setTitle(title)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(View);\n","export default {\n    // FONT FAMILY\n    FONT_FAMILY: 'Roboto',\n    ARABIC_FONT_FAMILY: 'Roboto',\n    // FONT SIZE\n    SIZE_SMALL: '1rem',\n    SIZE_MEDIUM: '2rem',\n    SIZE_LARGE: '3rem',\n    // FONT WEIGHT\n    WEIGHT_LIGHT: 200,\n    WEIGHT_REGULAR: 400,\n    WEIGHT_MEDIUM: 600,\n    WEIGHT_BOLD: 800,\n    WEIGHT_BLACK: 900,\n    // COLORS\n    // COLOR_PRIMARY_LIGHT: '#ef5350',\n    COLOR_PRIMARY: '#0061BF',\n    // COLOR_PRIMARY_DARK: '#b71c1c',\n    // COLOR_SECONDARY_DARK: '#4b61c0',\n    // COLOR_SECONDARY: '#5887F9',\n    // COLOR_SECONDARY_LIGHT: '#598cff',\n    COLOR_WHITE: '#ffffff',\n    COLOR_LIGHTER: '#afafaf',\n    COLOR_LIGHT: '#707070',\n    COLOR_DEFAULT: '#4b4b4b',\n    COLOR_DARK: '#313131',\n    COLOR_DARKER: '#1b1b1b',\n    COLOR_BLACK: '#000000',\n};\n","import TH from \"../../theme\";\n\nconst drawerWidth = 240;\nconst styles = theme => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(4),\n        // backgroundColor: theme.palette.background.default,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: drawerWidth,\n    },\n    // appBar\n    appBarSpacer: {\n        ...theme.mixins.toolbar,\n        marginBottom: theme.spacing(2),\n    },\n    appBar: {\n        // zIndex: 1,\n        // width: `calc(100% - ${drawerWidth}px)`,\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    toolbar: {\n        // ...theme.mixins.toolbar,\n        paddingRight: 48,\n    },\n    flexGrow: {\n        flexGrow: 1,\n    },\n    // drawer\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    // list\n    list: {\n        width: '100%',\n        maxWidth: drawerWidth,\n        backgroundColor: theme.palette.background.paper,\n    },\n    nestedItem: {\n        paddingLeft: theme.spacing(4),\n    },\n    // responsive layout\n    pageContainer: {\n        position: 'relative',\n        minHeight: '100vh',\n    },\n    contentWrap: {\n        paddingBottom: theme.spacing(8), /* Footer height */\n    },\n    footer: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        height: theme.spacing(8), /* Footer height */\n    },\n    // others\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    avatar: {\n        color: TH.COLOR_WHITE,\n        backgroundColor: TH.COLOR_PRIMARY,\n    },\n    avatarLarge: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    hide: {\n        display: 'none',\n    },\n});\n\nexport default styles;\n","import React from \"react\";\nimport {\n    Typography,\n    CssBaseline,\n    Link as UILink,\n    Box,\n    Grid,\n    Container,\n} from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport styles from './layout.mui_style';\nimport {Link} from 'react-router-dom';\nimport {withSnackbar} from \"notistack\";\n\nclass View extends React.PureComponent {\n\n    getYear() {\n        return new Date().getFullYear();\n    }\n\n    render() {\n        const {classes, children} = this.props;\n        return (\n            <>\n                <CssBaseline/>\n                <Box className={classes.pageContainer}>\n                    {/*Main Content*/}\n                    <Box className={classes.contentWrap}>\n                        <main className={classes.content}>\n                            <Container>\n                                {/*    <Grid*/}\n                                {/*        container*/}\n                                {/*        justify='center'*/}\n                                {/*        alignItems='center'*/}\n                                {/*        direction='column'*/}\n                                {/*    >*/}\n                                {/*        <Grid item xs={12} sm={11} md={10} lg={9} xl={8}>*/}\n                                {children}\n                                {/*</Grid>*/}\n                                {/*</Grid>*/}\n                            </Container>\n                        </main>\n                    </Box>\n\n                    {/*footer*/}\n                    <Box className={classes.footer} component='footer'>\n                        <Grid container justify='center' alignItems='center' direction='column'>\n                            <nav>\n                                <UILink variant=\"button\" color={\"textPrimary\"}\n                                        to={`/about`}\n                                        component={Link}\n                                        key={'about'}\n                                        className={classes.link}>\n                                    {'About'}\n                                </UILink>\n                            </nav>\n                            <Box my={1}>\n                                <Typography\n                                    variant='caption'\n                                    color='textPrimary'\n                                    align='center'\n                                >\n                                    Book Finder © {this.getYear()}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    </Box>\n                </Box>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(withSnackbar(View));\n","import View from './layout.view';\n\nexport default View;\n","import React from \"react\";\nimport {\n    // BrowserRouter as Router, // for heroku\n    HashRouter as Router, // for github pages\n    // Route,\n    Switch,\n} from \"react-router-dom\";\nimport Route from '../components/routeWrapper';\nimport Book from '../views/book';\nimport About from '../views/about';\nimport AdvancedSearch from '../views/advanced_search';\nimport Search from '../views/search';\nimport Results from '../views/results';\nimport {Helmet} from 'react-helmet-async';\nimport Layout from '../components/layout';\n// import {BASE_NAME} from \"../../config\"; // for github pages with browserRouter\n\n\nexport default class extends React.PureComponent {\n    render() {\n        const {empty, title = \"Book Finder\"} = this.props;\n        return (\n            <>\n                <Helmet>\n                    <title>{title}</title>\n                </Helmet>\n                {/*<Router> /!*for browserRouter *!/*/}\n                {/*<Router basename={BASE_NAME}> /!*for browserRouter with github pages*!/*/}\n                <Router basename='/'> {/*for hashRouter*/}\n                    {\n                        !empty ? (\n                                <Switch>\n                                    <Route exact path=\"/book/:id\" component={Book} layout={Layout}/>\n                                    <Route path=\"/results\" component={Results} layout={Layout}/>\n                                    <Route path=\"/about\" component={About} layout={Layout}/>\n                                    <Route path=\"/advanced-search\" component={AdvancedSearch} layout={Layout}/>\n                                    <Route path=\"*\" component={Search} layout={Layout}/>\n                                </Switch>\n                            ) :\n                            (\n                                <Switch>\n                                    <Route exact path=\"/book/:id\" component={Book} layout={Layout}/>\n                                    <Route path=\"/about\" component={About} layout={Layout}/>\n                                    <Route path=\"/advanced-search\" component={AdvancedSearch} layout={Layout}/>\n                                    <Route path=\"*\" component={Search} layout={Layout}/>\n                                </Switch>\n                            )\n                    }\n                </Router>\n            </>\n        );\n    }\n}\n","import Reduxed from './routing.redux';\n\nexport default Reduxed;\n","import {connect} from \"react-redux\";\nimport View from \"./routing.view\";\nimport _ from 'lodash';\n\nconst mapStateToProps = state => ({\n    title: state.global.title,\n    empty: !state.search.res || _.isEmpty(state.search.res),\n});\n\nexport default connect(\n    mapStateToProps,\n)(View);\n","import {createMuiTheme} from \"@material-ui/core\";\nimport {blueGrey} from \"@material-ui/core/colors\";\nimport theme from \"../../theme\";\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: theme.COLOR_PRIMARY,\n        },\n        secondary: {\n            // main: theme.COLOR_SECONDARY,\n            main: blueGrey[500],\n        },\n        primaryText: {\n            main: theme.COLOR_DEFAULT,\n        }\n    },\n});\n","import View from './root.view';\n\nexport default View;\n","import React from \"react\";\nimport Router from '../routing';\nimport {IS_DEV, TIMEOUT} from '../config';\nimport {\n    setTimeOut,\n    setupLoggingInterceptor,\n    setupDurationInterceptor,\n} from '../utils/axios';\nimport {ThemeProvider} from '@material-ui/styles';\nimport muiTheme from \"../theme/material_ui\";\nimport {HelmetProvider} from 'react-helmet-async';\nimport {SnackbarProvider} from 'notistack';\nimport {IconButton} from \"@material-ui/core\";\nimport {Close as CloseIcon} from \"@material-ui/icons\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        /**\n         * subscribers\n         */\n        this.notistackRef = React.createRef();\n\n\n        /**\n         * logging requests in DEV mode\n         */\n        if (IS_DEV) {\n            setupLoggingInterceptor();\n        }\n        setupDurationInterceptor();\n    }\n\n    componentDidMount() {\n        // timeout\n        setTimeOut(TIMEOUT);\n    }\n\n    _closeSnackbar = key => () => {\n        this.notistackRef.current.closeSnackbar(key);\n    }\n\n    render() {\n        return (\n            <>\n                <ThemeProvider theme={muiTheme}>\n                    <HelmetProvider>\n                        <SnackbarProvider\n                            ref={this.notistackRef}\n                            maxSnack={3}\n                            preventDuplicate={true}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            autoHideDuration={3000}\n                            // hideIconVariant={false}\n                            // dense={false}\n                            action={(key) => (\n                                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\"\n                                            onClick={this._closeSnackbar(key)}>\n                                    <CloseIcon/>\n                                </IconButton>\n                            )}\n                        >\n                            <Router/>\n                        </SnackbarProvider>\n                    </HelmetProvider>\n                </ThemeProvider>\n            </>\n        );\n    }\n}\n","import axios from 'axios';\n// import _ from 'lodash';\n\nexport const setAuthorizationToken = token => {\n    if (token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common.Authorization;\n    }\n};\n\nexport const setAcceptLanguage = language => {\n    if (language) {\n        axios.defaults.headers.common['Accept-Language'] = language;\n    } else {\n        delete axios.defaults.headers.common['Accept-Language'];\n    }\n};\n\nexport const setTimeOut = timeout => {\n    axios.defaults.timeout = timeout;\n};\n\nexport const setupLoggingInterceptor = () => {\n    // request\n    axios.interceptors.request.use(config => {\n        console.log('Request:', config);\n        return config;\n    });\n    // response\n    axios.interceptors.response.use(response => {\n        console.log('Response:', response);\n        return response;\n    });\n};\n\n\nexport const setupDurationInterceptor = () => {\n    // request\n    axios.interceptors.request.use(config => {\n        if (config) {\n            config.metadata = {startTime: new Date()};\n        }\n        return config;\n    }, error => {\n        return Promise.reject(error);\n    });\n    // response\n    axios.interceptors.response.use(response => {\n        if (response && response.config && response.config.metadata) {\n            response.config.metadata.endTime = new Date();\n            if (response.config.metadata.startTime) {\n                response.duration = response.config.metadata.endTime - response.config.metadata.startTime;\n            }\n        }\n        return response;\n    }, error => {\n        try {\n            if (axios.isCancel(error)) {\n                return new Promise(() => {\n                });\n            }\n            if (error && error.config && error.config.metadata) {\n                error.config.metadata.endTime = new Date();\n                if (error.config.metadata.startTime) {\n                    error.duration = error.config.metadata.endTime - error.config.metadata.startTime;\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        return Promise.reject(error);\n    });\n};\n\n// export const getErrorMessage = err => {\n//     let msg = '';\n//     if (err.response) {\n//         if (err.response.data) {\n//             msg = err.response.data.non_field_errors || err.response.data.detail;\n//         }\n//         if (!msg && !_.isEmpty(err.response.data)) {\n//             msg = JSON.stringify(err.response.data);\n//         }\n//     }\n//     if (!msg) {\n//         msg = err.message;\n//     }\n//     if (!msg && err.response) {\n//         msg = `Error ${err.response.status}`;\n//     }\n//     if (!msg) {\n//         msg = 'Network Error';\n//     }\n//     if (!msg) {\n//         msg = \"Unknown Error\";\n//     }\n//     return msg;\n// };\n\n\n// export const apiMock = (t = 3000) => new Promise(resolve => setTimeout(resolve, t));\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport configureStore from './redux/configureStore';\nimport Root from './root';\n\nconst {persistor, store} = configureStore();\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <PersistGate persistor={persistor} loading={null}>\n                    <Root/>\n                </PersistGate>\n            </Provider>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","// react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// css\nimport './index.css';\n// app\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n// PWA\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <React.StrictMode>\n    //     <App/>\n    // </React.StrictMode>,\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}